<Window x:Class="RestaurantOrders.Views.CreateProductWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RestaurantOrders.Views"
        xmlns:vms="clr-namespace:RestaurantOrders.ViewModels"
        mc:Ignorable="d"
        Title="Create Product" Height="550" Width="500"
        Icon="/Images/KETO.png"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <vms:CreateProductViewModel/>
    </Window.DataContext>
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <Style x:Key="LabelTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="0,10,0,5"/>
        </Style>

        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="NumericTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}">
            <!-- Additional settings for numeric input if needed -->
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Padding" Value="15,0"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="10"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
            <Setter Property="Background" Value="#e69149"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#bf793d"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#996131"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
            <Setter Property="Background" Value="#572f0e"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#40230b"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#301b09"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Border Background="#F0F0F0" 
                CornerRadius="8" 
                Width="450" 
                Height="500"
                HorizontalAlignment="Center" 
                VerticalAlignment="Center"
                BorderBrush="#CCCCCC"
                BorderThickness="1"
                Padding="25">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <TextBlock Text="Create New Product" 
                               Style="{StaticResource HeaderTextStyle}"/>

                    <!-- Product Name -->
                    <TextBlock Text="Product Name:" 
                               Style="{StaticResource LabelTextStyle}"/>
                    <TextBox x:Name="ProductNameTextBox" 
                             Text="{Binding ProductName, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource TextBoxStyle}"/>

                    <!-- Product Type -->
                    <TextBlock Text="Product Type:" 
                               Style="{StaticResource LabelTextStyle}"/>
                    <ComboBox x:Name="ProductTypeComboBox"
                              ItemsSource="{Binding ProductTypes}"
                              SelectedItem="{Binding SelectedProductType}"
                              Style="{StaticResource ComboBoxStyle}"/>

                    <!-- Price -->
                    <TextBlock Text="Price (RON):" 
                               Style="{StaticResource LabelTextStyle}"/>
                    <TextBox x:Name="PriceTextBox" 
                             Text="{Binding Price, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource NumericTextBoxStyle}"/>

                    <!-- Allergens Section -->
                    <TextBlock Text="Allergens:" 
                               Style="{StaticResource LabelTextStyle}"/>
                    <Border BorderBrush="#CCCCCC" 
                            BorderThickness="1" 
                            Padding="10" 
                            Margin="0,5,0,15">
                        <ItemsControl ItemsSource="{Binding AvailableAllergens}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Name}" 
                                              IsChecked="{Binding IsSelected}" 
                                              Style="{StaticResource CheckBoxStyle}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>

                    <!-- Validation Message -->
                    <TextBlock Text="{Binding ValidationMessage}" 
                               Foreground="Red" 
                               TextWrapping="Wrap"
                               Margin="0,10,0,15"
                               Visibility="{Binding HasValidationMessage, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                    <!-- Buttons -->
                    <StackPanel Orientation="Horizontal" 
                                HorizontalAlignment="Center" 
                                Margin="0,20,0,0">
                        <Button Content="Save Product" 
                                Command="{Binding SaveCommand}"
                                Style="{StaticResource SaveButtonStyle}"/>
                        <Button Content="Cancel" 
                                Command="{Binding CancelCommand}"
                                Style="{StaticResource CancelButtonStyle}"/>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</Window>